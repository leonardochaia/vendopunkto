// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package cmd

import (
	"github.com/leonardochaia/vendopunkto/invoice"
	"github.com/leonardochaia/vendopunkto/monero"
	"github.com/leonardochaia/vendopunkto/server"
	"github.com/leonardochaia/vendopunkto/store/postgres"
	"github.com/spf13/viper"
)

import (
	_ "net/http/pprof"
)

// Injectors from wire.go:

func NewServer() (*server.Server, error) {
	client, err := NewDBClient()
	if err != nil {
		return nil, err
	}
	store, err := invoice.NewStore(client)
	if err != nil {
		return nil, err
	}
	walletClient, err := monero.CreateMoneroClient()
	if err != nil {
		return nil, err
	}
	manager, err := invoice.NewManager(store, walletClient)
	if err != nil {
		return nil, err
	}
	handler := invoice.NewHandler(manager)
	serverServer := server.NewServer(handler)
	return serverServer, nil
}

// wire.go:

func NewDBClient() (*postgres.Client, error) {
	var pgClient *postgres.Client
	var err error
	switch viper.GetString("storage.type") {
	case "postgres":
		pgClient, err = postgres.New()
	}
	if err != nil {
		return nil, err

	}
	return pgClient, nil
}
