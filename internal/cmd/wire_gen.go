// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package cmd

import (
	"github.com/hashicorp/go-hclog"
	"github.com/leonardochaia/vendopunkto/clients"
	"github.com/leonardochaia/vendopunkto/internal/conf"
	"github.com/leonardochaia/vendopunkto/internal/invoice"
	"github.com/leonardochaia/vendopunkto/internal/pluginmgr"
	"github.com/leonardochaia/vendopunkto/internal/pluginwallet"
	"github.com/leonardochaia/vendopunkto/internal/server"
	"github.com/leonardochaia/vendopunkto/internal/store"
	"github.com/leonardochaia/vendopunkto/internal/store/repositories"
)

import (
	_ "net/http/pprof"
)

// Injectors from wire.go:

func NewServer(globalLogger hclog.Logger, runtime *conf.Runtime) (*server.Server, error) {
	startup, err := conf.LoadStartupConfig()
	if err != nil {
		return nil, err
	}
	db, err := store.NewDB(globalLogger, startup)
	if err != nil {
		return nil, err
	}
	invoiceRepository := repositories.NewPostgresInvoiceRepository(db)
	http := clients.NewHTTPClient()
	currencyRepository := repositories.NewPostgresCurrencyRepository(db)
	pluginManager := pluginmgr.NewPluginManager(globalLogger, http, currencyRepository, runtime)
	invoiceTopic := invoice.NewTopic()
	invoiceManager, err := invoice.NewManager(invoiceRepository, pluginManager, globalLogger, invoiceTopic)
	if err != nil {
		return nil, err
	}
	invoiceHandler := server.NewInvoiceHandler(invoiceManager, globalLogger, pluginManager, invoiceTopic)
	transactionBuilder := store.NewPostgreTransactionBuilder(db)
	vendoPunktoRouter, err := server.NewRouter(invoiceHandler, globalLogger, transactionBuilder, startup)
	if err != nil {
		return nil, err
	}
	currencyHandler, err := server.NewCurrencyHandler(pluginManager, currencyRepository, runtime, globalLogger)
	if err != nil {
		return nil, err
	}
	manager := conf.NewManager(globalLogger, runtime)
	configHandler, err := server.NewConfigHandler(runtime, globalLogger, manager)
	if err != nil {
		return nil, err
	}
	pluginHandler, err := server.NewPluginHandler(pluginManager, globalLogger)
	if err != nil {
		return nil, err
	}
	internalRouter, err := server.NewInternalRouter(invoiceHandler, currencyHandler, configHandler, pluginHandler, globalLogger, transactionBuilder, startup)
	if err != nil {
		return nil, err
	}
	walletPoller, err := pluginwallet.NewPoller(globalLogger, runtime, transactionBuilder, pluginManager, invoiceRepository, invoiceManager)
	if err != nil {
		return nil, err
	}
	serverServer, err := server.NewServer(vendoPunktoRouter, internalRouter, db, transactionBuilder, globalLogger, pluginManager, walletPoller, invoiceTopic, startup)
	if err != nil {
		return nil, err
	}
	return serverServer, nil
}
